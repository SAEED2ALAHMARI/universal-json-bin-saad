{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "properties": {
    "theme": {
      "type": "string"
    },
    "formData": {
      "type": "object"
    },
    "schema": {
      "type": "object"
    },
    "xhrSchema": {
      "type": "object"
    },
    "uiSchema": {
      "type": "object"
    },
    "validations": {
      "type": "object"
    },
    "prefixId": {
      "type": "string"
    },
    "submitOnEnter": {
      "type": "function"
    },
    "onChange": {
      "type": "function"
    },
    "onUpload": {
      "type": "function"
    },
    "onSubmit": {
      "type": "function"
    },
    "onStepNext": {
      "type": "function"
    },
    "onStepBack": {
      "type": "function"
    },
    "onStepSkip": {
      "type": "function"
    },
    "onStepReset": {
      "type": "function"
    },
    "formButtons": {
      "type": "function"
    },
    "actionButtonPos": {
      "type": "string"
    },
    "onCancel": {
      "type": "function"
    },
    "activityIndicatorEnabled": {
      "type": "boolean"
    },
    "submitValue": {
      "type": "string"
    },
    "cancelValue": {
      "type": "string"
    },
    "inProgressValue": {
      "type": "string"
    },
    "disabled": {
      "type": "boolean"
    },
    "cancelVariant": {
      "type": "string"
    },
    "submitVariant": {
      "type": "string"
    },
    "onError": {
      "type": "function"
    },
    "interceptors": {
      "type": "object"
    }
  },
  "methods": {
    "useFormStateMachine": {
      "ref": "./methods/use-form-state-machine.json"
    },
    "useFormEvents": {
      "ref": "./methods/use-form-events.json"
    },
    "useStepperEvents": {
      "ref": "./methods/use-stepper-events.json"
    },
    "formStyles": {
      "ref": "./methods/use-form-styles.json"
    },
    "getHashCodeFromXHRDef": {
      "ref": "./methods/hash-code-from-xhr-def.json"
    },
    "RenderFormButtons": {
      "src": "./rende-form-buttons.tsx",
      "returns": {
        "RenderFormButtons": {}
      }
    },
    "getVariables": {
      "ref": "./use-context-variables.json"
    },
    "getLoadingContext": {
      "ref": "./use-loading-context.json"
    },
    "getStepperContext": {
      "ref": "./use-stepper-context.json"
    },
    "getEventContext": {
      "ref": "./use-event-context.json"
    }
  },
  "imports": [
    {
      "path": "../helpers/form.side-effects",
      "exports": "FormSideEffects"
    }
  ],
  "variables": [
    {
      "FormSideEffects": {
        "implements": [
          "formData",
          "schema",
          "xhrSchema",
          "uiSchema",
          "validations",
          "prefixId",
          "submitOnEnter",
          "onChange",
          "onSubmit",
          "onStepNext",
          "onStepBack",
          "onStepSkip",
          "onStepReset",
          "onError",
          "interceptors"
        ],
        "exports": [
          "isFormLoading",
          "isFormSubmitting",
          "hasPageLayoutTabs",
          "hasPageLayoutSteps",
          {
            "formEvents": ["onXHRSchemaEvent", "onUpdateKeyProperty"]
          }
        ]
      }
    },
    {
      "ruleProps": {
        "resolvedFacts": [
          "isFormLoading",
          "isFormSubmitting",
          "hasPageLayoutTabs",
          "hasPageLayoutSteps"
        ]
      }
    },
    {
      "formFieldProps": [
        "schema",
        {
          "data": "formData"
        },
        "uiSchema",
        "xhrSchema",
        "onChange",
        "onXHRSchemaEvent",
        "onUpdateKeyProperty",
        {
          "resolvedFormFacts": "ruleProps.resolvedFacts"
        }
      ]
    }
  ],
  "components": [
    {
      "CrossPlatformWrapper": {
        "properties": {
          "classes": {},
          "uiSchema": {},
          "defaultTheme": {},
          "theme": {},
          "RenderFormButtons": {},
          "actionButtonPos": {},
          "hasPageLayoutSteps": {},
          "isFormLoading": {}
        },
        "components": [
          {
            "if": {
              "ref": "./rules/form/is-form-loading.json",
              "then": [
                {
                  "CrossPlatformLoadingWrapper": {
                    "src": "./platform-loading-wrapper.tsx"
                  }
                }
              ],
              "else": [
                { 
                  "FormField": {
                    "props": [
                      "formFieldProps"
                    ],
                    "ref": "./FormField.json"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
